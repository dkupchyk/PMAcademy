// --- Задание 1 --------------------------------------------------
// Укажи с объяснением в комментариях что выведет каждое выражение.

// Так как для явного преобразования применяется оператор "+" и один из аргументов это строка,
// то в этом случае он приводит к строке и другой аргумент =>
// получим (String(2) + "2" == "2" + String(2)) => ("22" == "22") => true.
console.log(2 + "2" == "2" + 2); // true

// Аналогично к первому примеру получим преобразования числового аргумента к строке =>
// (String(2) + "3" == "3" + String(2)) => ("23" == "32") => false.
console.log(2 + "3" == "3" + 2); // false

// Левая сторона неравенства равна строке "32", так как происходит конкатенация строк.
// Правая сторона неравенства равна числу 5 так как 3 и 2 это числа и к ним применяется числовой оператор добавления.
console.log("3" + "2" == 3 + 2);  // false

// Левая сторона неравенства равна строке "32", так как происходит конкатенация строк.
// Расмотрим правую сторону: аналогично к первому примеру получим преобразования числового аргумента к строке =>
// "3" + String(2) => "32". Получим неравенство "32" == "32" => true.
console.log("3" + "2" == "3" + 2); // true

// Аналогично к предыдущему примеру, слева получим строку "32", а справа строку "23" =>
// "32" == "23" => false.
console.log("3" + "2" == 2 + "3"); // false

// Левая сторона неравенства будет равна числу 5, поскольку сначала Number("3") переобразует строку "3"
// в число 3 и получим 2 + 3, что равно числу 5. Аналогично правая сторона тоже будет равна числу 5.
// Получим неравенство 5 == 5 => true.
console.log(2 + Number("3") == Number("3") + 2); // true

// Так как деление (/) это математический оператор, то происходит численное преобразование
// => "6" преобразуется в число 6 => получим ответ 12 / 6 = 2.
console.log(12 / "6"); // 2

// Поскольку в данном примере операции будут выполняться последовательно,
// то можем рассмотреть такую очередность - (("number" + 15) + 3).
// Сначала выполняется ("number" + 15): так как для явного преобразования применяется оператор "+"
// и один из аргументов это строка, то в этом случае он приводит к строке и другой аргумент =>
// получим ("number" + String(15)) => ("number" + "15") => "number15".
// Дальше вполняется ("number15" + 3): аналогично число 3 преобразуется в строку и в результате
// получим конкатенацию строк => "number153".
console.log("number" + 15 + 3); // "number153"

// В данном примере операции тоже будут выполняться последовательно, поэтому можем рассмотреть такую очередность - ((15 + 3) + "number").
// Сначала выполняется (15 + 3): это просто добавление двух чисел, поэтому получис число 18.
// Дальше вполняется (18 + "number"): аналогично предыдущим таким примерам получим преобразуется в
// строку и в результате получим конкатенацию строк => "18number".
console.log(15 + 3 + "number"); // "18number"

// Так как оператор больше (>) это математический оператор, то происходит численное преобразование
// [1] будет равно 1, поскольку в масиве только одно значение. null это falsy значение, поэтому будет 0.
// Получили такое неравенство: 1 > 0 => true.
console.log([1] > null); // true

// Сначала рассмотрим чему будет равняться +"bar". Так как у нас происходит преобразование в числовой тип,
// а значение самой строки не есть число, то получим NaN (Not a Number).
// Дальше смотрим чему равняется ("foo" + NaN): аналогично предыдущим примерам получим преобразования
// числового аргумента (так как тип NaN это Number) к строке => ("foo" + String(NaN)) => ("foo" + "NaN") => "fooNaN".
console.log("foo" + +"bar"); // "fooNaN"

// Так как одно значение в неравенстве равняется true, то оно преобразуется в 1. Потом эта 1 преобразуется
// в строку и получим: 'true' == '1' => false.
console.log('true' == true); // false

// Аналогично к предыдущему примеру получим '0' == 'false' => false.
console.log(false == 'false'); // false

// Нестрогое равенство возвращает false, потому что null равно только undefined, null и ничему больше.
console.log(null == ''); // false

// !! (двойное отрицание) это булевый оператор, поэтому "false" и "true" преобразуются в булеан =>
// !"false" == !!"true" => !!Boolean("false") == !!Boolean("true") => !!1 == !!1 => !0 == !0 => 1 == 1 => true.
console.log(!!"false" == !!"true"); // true

// Проверка 'x' == 'x' будет равна значению true, поэтому в результате получим массив из одного элемента.
console.log(['x' == 'x']); // [true]

// --- Задание 2 ----------------------------------------------------
// Укажи с объяснением в комментариях что выведет каждое выражение.

const enemy = {
    name: "Bob"
}

const friend = {
    name: "Alex"
}

// На слeдующем рядке мы объявляем новую переменную me и присваиваем ей ссылку
// объекта friend (так как объекты передаются по ссылке).
// Можем проверить, что они идентичны написав console.log(me === friend).
const me = friend

// Дальше мы меняем у объекта me свойство name, которое тоже поменяет свойство name у
// объекта friend, так как me и friend это, по сути, одна и та же ссылка.
me.name = "Bob"

// Поэтому следующая строка выведет "Bob", сравнение (me == friend) выведет true,
// а сравнение (me == enemy) выведет false, потому что эти два объекта создавались независимо друг от друга.
console.log(friend.name)   // "Bob"
console.log(me == friend)  // true
console.log(me == enemy)   // false

// --- Задание 3 ----------------------------------------------------
// Запросить у пользователя номер месяца через prompt.
// Проверить тип, если пользователь ввел строку, то принимать значения “January, February etc.”
// Выводить  alert с номер этого месяца (January = 1);
// Если же введено было число - кидать в alert наименование месяца (введено 1 - вывести January);
// По желанию  - сделать задачу с минимальным использованием switch/case.

